# Generated by Django 5.2.3 on 2025-06-15 11:44

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import sales_enquiry.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('role', models.CharField(choices=[('DSE', 'DSE'), ('ADMIN', 'Admin')], default='DSE', max_length=5, verbose_name='Role')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Enquiry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('unique_id', models.CharField(default=sales_enquiry.models.generate_unique_enquiry_id, editable=False, max_length=30, unique=True)),
                ('customer_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(help_text="Customer's phone number", max_length=15)),
                ('enquiry_source', models.CharField(choices=[('WALKIN', 'Walk-in'), ('TELE', 'Tele'), ('WEB', 'Website'), ('FLIPKART', 'Flipkart'), ('AMAZON', 'Amazon'), ('CSD', 'CSD'), ('CPC', 'CPC'), ('ADS', 'Ads'), ('EVENTS', 'Events'), ('REF', 'Referral'), ('OTHER', 'Other')], default='WALKIN', max_length=10)),
                ('buying_type', models.CharField(choices=[('CASH', 'Cash'), ('FINANCE', 'Finance')], default='CASH', max_length=10)),
                ('finance_bank', models.CharField(blank=True, help_text='Bank if buying type is Finance', max_length=100, null=True)),
                ('assigned_financier_name', models.CharField(blank=True, help_text="Financier's contact person", max_length=100, null=True)),
                ('deal_offer_image', models.ImageField(blank=True, null=True, upload_to='deal_offers/')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('follow_up_status', models.CharField(choices=[('INTERESTED', 'Interested'), ('HOT_LEAD', 'Hot Lead'), ('TD_SCHED', 'Test Drive Scheduled'), ('QUOTE_SENT', 'Quotation Sent'), ('COD', 'Call On Delivery'), ('50_50', '50-50'), ('NEGOTIATE', 'Negotiation Phase'), ('FU_SCHED', 'Follow-up Call/Visit Scheduled'), ('DOC_PENDING', 'Documentation Pending')], default='INTERESTED', max_length=20)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('PEND_SOLD', 'Pending Sold Approval'), ('SOLD', 'Sold'), ('PEND_CLOSE', 'Pending Close Approval'), ('CLOSED', 'Closed')], default='OPEN', max_length=10)),
                ('first_submit_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('sold_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('sale_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('close_reason', models.TextField(blank=True, null=True)),
                ('dse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_enquiries', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edited_enquiries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Enquiries',
            },
        ),
    ]
